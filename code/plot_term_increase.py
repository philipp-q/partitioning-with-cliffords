import numpy as np
import matplotlib.pyplot as plt


# For now, this is all when varying _one_ Clifford gate only

def find_envelope(in_list):
    upper, lower = [], []
    for li in in_list:
        lower += [np.min(li)]
        upper += [np.max(li)]

    return upper, lower 


# >>>>>>>>>>>>>>>>>>   BEGIN DATA   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
distances_h2 = [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0]
distances_beh2 = [1.0, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2, 2.4, 2.6, 2.8, 3.0]
distances_n2 = [0.75, 1.0, 1.3, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0]

# h2_before_folding

# h2_after_folding = [[90, 110, 90, 110, 134, 114, 114, 90, 118, 114, 114, 118, 114, 118, 114, 90, 90, 118, 140, 140, 118], [123, 108, 106, 108, 82, 123, 106, 121, 106, 121, 122, 108, 110, 118, 122, 122, 106, 108, 106, 108, 122, 121], [128, 91, 144, 91, 91, 91, 91, 124, 124, 91, 135, 141, 133, 125, 124, 125, 115, 129, 134, 124], [138, 136, 128, 141, 140, 144, 120, 128, 96, 144, 147, 144, 145, 96, 96, 128, 156, 132, 62, 126, 142, 144, 96, 142, 120, 137, 96, 156, 126, 120, 132, 126, 96, 122], [125, 120, 120, 121, 84, 124, 84, 117, 111, 111, 115, 129, 126, 111, 120, 120, 115, 111, 115, 111, 127, 112, 112, 84, 115, 126, 120, 120, 117, 84, 106, 115], [136, 90, 126, 134, 128, 90, 100, 118, 128, 128, 140, 140, 134, 90, 90, 114, 114, 126, 120, 130, 118, 110, 134, 90, 114, 90, 114, 114, 118, 114, 114], [137, 91, 91, 134, 91, 139, 129, 134, 134, 129, 132, 125, 91, 116, 129, 125, 129, 124, 116, 115], [94, 95, 62, 91, 62, 62, 90, 62, 90, 91, 84, 97, 97, 90, 84, 90, 97, 93, 91, 84, 62, 62, 90, 90, 81, 90, 91, 97, 91, 78, 97, 94, 91, 78, 84, 91, 91, 89, 84, 84], [81, 62, 62, 90, 89, 95, 84, 92, 84, 62, 62, 78, 84, 89, 84], [95, 148, 132, 134, 95, 124, 142, 127, 146, 146, 127, 143, 144, 157, 140, 145, 144, 115, 134, 129, 138, 127, 124, 146, 143, 128, 95, 95, 95, 122, 115, 137, 95, 137, 128, 128, 123, 127, 122, 122, 124, 138], [123, 137, 139, 137, 91, 144, 136, 136, 136, 124, 124, 138, 136, 133, 134, 91, 132, 124, 115, 137, 125, 115, 115, 123, 125, 124, 123, 134, 132, 135, 91, 134, 91], [118, 90, 118, 158, 138, 126, 126, 144, 120, 114, 90, 90, 120, 136, 132, 134, 130, 138, 90, 114, 114, 134, 90, 132, 90, 90, 120, 134, 114, 126, 90, 128, 114, 118, 144, 126, 138, 133, 118, 114], [108, 78, 116, 108, 114, 78, 114, 78, 108, 117, 108, 78, 106, 110, 116, 78, 78, 110, 78, 114, 108, 115, 114, 108, 115, 78, 110, 110, 110, 108, 120, 108, 128, 108, 108], [123, 78, 108, 78, 78, 110, 78, 78, 116, 122, 118, 117, 123, 104, 78, 107, 117, 115, 107, 106, 108, 115, 123, 117, 114, 78, 107, 78, 110, 108, 108, 116, 114, 117, 108, 132, 132, 108, 104, 108, 128, 112, 114, 110, 110, 108, 78], [121, 84, 120, 112, 119, 84, 121, 114, 127, 116, 112, 116, 116, 84, 110, 84, 84, 84, 124, 124], [148, 145, 143, 145, 144, 145, 98, 98, 122, 140, 145, 145, 98, 132, 122, 98], [78, 120, 112, 78, 115, 108, 78, 78, 108, 108, 108, 78, 119, 115, 110, 118, 118, 101, 115, 101, 108, 92, 101, 108, 116, 110, 114, 78, 115, 78, 115, 108, 108, 78, 108, 84], [117, 116, 128, 127, 135, 132, 89, 89, 129, 118, 126, 140, 132], [114, 114, 122, 78, 124, 108, 108, 119, 115, 117, 114, 78, 114, 119, 117, 108, 108, 84, 78, 115, 110, 78, 116, 78, 84, 110, 108, 110, 101, 101, 110], [124, 126, 90, 132, 118, 90, 132, 132, 132, 134, 136, 124, 118, 132, 90, 132, 90, 118, 136, 136, 90, 90, 136, 118, 138, 90, 90, 114, 118, 118, 118, 118, 114, 118, 132, 114, 114, 136, 118, 110, 90, 90, 132, 133, 110, 90, 118], [123, 84, 84, 146, 126, 112, 84, 130, 126, 106, 125, 84, 129, 84, 130, 114, 102, 124, 124, 112, 116, 102, 132, 92, 120, 112, 125, 102, 125, 102, 126, 121, 121], [124, 106, 104, 108, 121, 120, 108, 120, 122, 106, 82, 115, 108, 121, 115, 121, 82, 114, 82, 114, 108, 108, 111, 122, 106, 120, 108, 108, 108], [129, 129, 88, 129, 115, 126, 120, 116, 120, 88, 120, 134, 129, 120, 129, 88, 132, 120, 120, 124, 130, 124, 88, 134, 118, 112, 132, 118, 124, 118, 120, 124, 116, 118, 120, 130, 116, 112, 118, 116, 112, 88, 124, 88, 118, 118], [120, 101, 120, 125, 81, 81, 81, 81, 114, 101, 81, 81, 120, 101, 118, 109, 109, 101, 109], [138, 114, 90, 138, 110, 138, 124, 134, 110, 122, 124, 128, 116, 134, 135, 110, 130, 130, 116, 130], [141, 128, 95, 128, 128, 143, 138, 143, 95, 138, 95, 95, 95, 95, 129, 142, 95, 142, 141, 95, 115, 127, 115, 115, 138, 136, 138, 95, 136, 141]]

# Bond length increase
h2_before_folding =  [[2002, 2028, 2002, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2002, 2028, 2028, 2028, 2028, 2028], [2340, 2340, 2340, 2340, 2314, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340], [1742, 1716, 1742, 1742, 1716, 1742, 1742, 1742, 1742, 1716, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742], [3536, 3536, 3536, 3536, 3536, 3536, 3536, 3536, 3510, 3536, 3536, 3536, 3536, 3510, 3510, 3536, 3536, 3536, 3536, 3536, 3536, 3536, 3510, 3536, 3536, 3536, 3510, 3536, 3536, 3536, 3536, 3536, 3510, 3536], [3744, 3744, 3744, 3744, 3718, 3744, 3718, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3718, 3744, 3744, 3744, 3744, 3744, 3718, 3744, 3744], [3120, 3120, 3120, 3120, 3120, 3094, 3120, 3120, 3120, 3120, 3120, 3120, 3120, 3094, 3094, 3120, 3120, 3120, 3120, 3120, 3120, 3120, 3120, 3094, 3120, 3094, 3120, 3120, 3120, 3120, 3120], [2678, 2652, 2678, 2678, 2652, 2678, 2678, 2678, 2678, 2678, 2678, 2678, 2652, 2678, 2678, 2678, 2678, 2678, 2678, 2678], [2990, 2990, 2964, 2990, 2990, 2964, 2990, 2964, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2964, 2964, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990], [1482, 1456, 1456, 1482, 1482, 1482, 1482, 1482, 1482, 1456, 1456, 1482, 1482, 1482, 1482], [2704, 2720, 2720, 2720, 2704, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2704, 2720, 2704, 2720, 2720, 2720, 2704, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720], [2560, 2560, 2560, 2560, 2544, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2544, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2544, 2560, 2544], [2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2352, 2352, 2368, 2368, 2368, 2368, 2368, 2368, 2352, 2368, 2368, 2368, 2352, 2368, 2352, 2352, 2368, 2368, 2368, 2368, 2352, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368], [2224, 2208, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2208, 2224, 2224, 2224, 2224, 2208, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2208, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224], [3984, 3968, 3984, 3968, 3968, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3968, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3968, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3968], [2496, 2470, 2496, 2496, 2496, 2470, 2496, 2496, 2496, 2496, 2496, 2496, 2496, 2470, 2496, 2470, 2470, 2470, 2496, 2496], [2600, 2600, 2600, 2600, 2600, 2600, 2574, 2574, 2600, 2600, 2600, 2600, 2574, 2600, 2600, 2574], [3302, 3328, 3328, 3302, 3328, 3328, 3302, 3328, 3328, 3328, 3328, 3302, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3302, 3328, 3302, 3328, 3328, 3328, 3328, 3328, 3328], [1768, 1768, 1768, 1768, 1768, 1768, 1742, 1742, 1768, 1768, 1768, 1768, 1768], [2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2392, 2418, 2418, 2418, 2418, 2392, 2418, 2418, 2418, 2418, 2418, 2418, 2418], [4888, 4888, 4862, 4888, 4888, 4862, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4862, 4888, 4888, 4888, 4888, 4862, 4862, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4862, 4862, 4888, 4888, 4888, 4862, 4888], [3198, 3172, 3172, 3198, 3198, 3198, 3172, 3198, 3198, 3198, 3198, 3172, 3198, 3172, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198], [3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3146, 3172, 3172, 3172, 3172, 3172, 3146, 3172, 3146, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172], [5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5694, 5720, 5720], [2236, 2236, 2236, 2236, 2210, 2210, 2210, 2210, 2236, 2236, 2210, 2210, 2236, 2236, 2236, 2236, 2236, 2236, 2236], [2106, 2106, 2080, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106], [2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2782, 2808, 2782, 2808, 2782, 2782, 2808, 2808, 2782, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2782, 2808, 2808]]
h2_after_folding = [[2002, 2028, 2002, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2002, 2028, 2028, 2028, 2028, 2028], [2340, 2340,
2340, 2340, 2314, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340], [1742, 1716, 1742, 1742, 1716, 1742, 1742, 1742, 1742, 1716, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742], [3536, 3536, 3536, 3536, 3536, 3536, 3536, 3536, 3510, 3536, 3536, 3536, 3536, 3510, 3510, 3536, 3536, 3536, 3536, 3536, 3536, 3536, 3510, 3536, 3536, 3536, 3510, 3536, 3536, 3536, 3536, 3536, 3510, 3536], [3744, 3744, 3744, 3744, 3718, 3744, 3718, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3718, 3744, 3744, 3744, 3744, 3744, 3718, 3744, 3744], [3120, 3120, 3120, 3120, 3120, 3094, 3120, 3120, 3120, 3120, 3120, 3120, 3120, 3094, 3094, 3120, 3120, 3120, 3120, 3120, 3120, 3120, 3120, 3094, 3120, 3094, 3120, 3120, 3120, 3120, 3120], [2678, 2652, 2678, 2678, 2652, 2678, 2678, 2678, 2678, 2678, 2678, 2678, 2652, 2678, 2678, 2678, 2678, 2678, 2678, 2678], [2990, 2990, 2964, 2990, 2990, 2964, 2990, 2964, 2990, 2990,
2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2964, 2964, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990, 2990], [1482, 1456, 1456, 1482, 1482, 1482, 1482, 1482, 1482, 1456, 1456, 1482, 1482, 1482, 1482], [2704, 2720, 2720, 2720, 2704, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2704, 2720, 2704, 2720, 2720, 2720, 2704, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720], [2560, 2560, 2560, 2560, 2544, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2544, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2544, 2560, 2544], [2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2352, 2352, 2368, 2368, 2368, 2368, 2368, 2368, 2352, 2368, 2368, 2368, 2352, 2368, 2352, 2352, 2368, 2368, 2368, 2368, 2352, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368], [2224, 2208, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2208, 2224, 2224, 2224, 2224, 2208, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2208, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224], [3984, 3968, 3984, 3968, 3968, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3968, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3968, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3968], [2496, 2470, 2496, 2496, 2496, 2470, 2496, 2496, 2496, 2496, 2496, 2496, 2496, 2470, 2496, 2470, 2470, 2470, 2496, 2496], [2600, 2600, 2600, 2600, 2600, 2600, 2574, 2574, 2600, 2600, 2600, 2600, 2574, 2600, 2600, 2574], [3302, 3328, 3328, 3302, 3328, 3328, 3302, 3328, 3328, 3328, 3328, 3302, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3302, 3328, 3302, 3328, 3328, 3328, 3328, 3328, 3328], [1768, 1768, 1768, 1768, 1768, 1768, 1742, 1742, 1768, 1768, 1768, 1768, 1768], [2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2392, 2418, 2418, 2418, 2418, 2392, 2418, 2418, 2418, 2418, 2418, 2418, 2418], [4888, 4888, 4862, 4888, 4888, 4862, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4862, 4888, 4888, 4888, 4888, 4862, 4862, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4888, 4862, 4862, 4888, 4888, 4888, 4862, 4888], [3198, 3172, 3172, 3198, 3198, 3198, 3172, 3198, 3198, 3198, 3198, 3172, 3198, 3172, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198, 3198], [3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172,
3172, 3172, 3146, 3172, 3172, 3172, 3172, 3172, 3146, 3172, 3146, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172, 3172], [5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720, 5720,
5720, 5720, 5720, 5720, 5720, 5720, 5694, 5720, 5694, 5720, 5720], [2236, 2236, 2236, 2236, 2210, 2210, 2210, 2210, 2236, 2236, 2210, 2210, 2236, 2236, 2236, 2236, 2236, 2236, 2236], [2106, 2106, 2080, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106], [2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2782, 2808, 2782, 2808, 2782, 2782, 2808, 2808, 2782, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2808, 2782, 2808, 2808]] 
# Test difference
equal = np.equal(np.array(h2_before_folding), np.array(h2_after_folding))
print("h2 equal???", equal)

# beh2_before_folding
# beh2_after_folding = [[541, 361, 361, 529, 541, 541, 447, 447, 539, 481, 537, 361, 539, 519, 481, 539, 361, 539, 529, 361, 519, 481, 481, 447, 481, 481], [529, 481, 481, 535, 481, 515, 539, 513, 481], [543, 513, 361, 547, 537, 361, 547, 541, 481, 529, 361, 535, 539, 481, 537, 529, 481, 529, 361, 361, 547, 529, 547, 539, 447, 539, 535, 515, 539, 535, 545, 447, 539, 481, 539, 529, 481, 481, 481], [541, 513, 361, 545, 539, 519, 481, 539, 539, 539, 541, 481, 535, 361, 537, 539, 539, 539, 519, 537, 539, 529, 361, 447, 513, 361, 447, 481, 539, 539, 361], [539, 481, 543, 541, 549, 539, 541, 539, 361, 541, 481, 447, 537, 501, 541, 481, 541, 541, 543, 537, 539, 535, 481, 481, 361, 481, 481, 481, 537, 529, 481, 481, 529, 539, 481, 539, 447, 447, 539], [541, 541, 361, 481, 539, 539, 539, 537, 513, 361, 537, 537, 481, 539, 537, 537, 537, 519, 361, 361, 539, 481, 539, 481, 481, 481, 539, 361, 537, 481, 539, 539], [519, 539, 543, 519, 519, 539, 537, 539, 535, 537, 537, 539, 481, 515, 519, 529, 539, 519, 515, 535, 481, 529, 481, 519, 513, 519, 481, 537, 537, 535, 361, 447, 481], [543, 541, 513, 361, 537, 535, 541, 541, 361, 515, 519, 361, 529, 481, 481, 515, 481, 537, 361, 361, 539, 481, 519, 529, 481, 519, 539, 539, 513, 361], [537, 537, 555, 543, 545, 529, 481, 529, 537, 519, 529, 537, 513, 481, 481, 539, 539], [547, 519, 531, 539, 361, 539, 361, 537, 539, 361, 539, 539, 539, 535, 481, 447, 481], [481, 539, 481, 481, 361, 529, 481, 537, 539, 481, 361, 537, 481, 539, 537, 481, 481, 481, 361, 519, 361, 481, 481, 535, 361, 481, 481, 519, 481]] 

# ############ bond dimensions ####################

beh2_before_folding = [[4002, 3956, 3956, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 3956, 4002, 4002, 4002, 4002, 3956, 4002, 4002, 3956, 4002, 4002, 4002, 4002, 4002, 4002], [2254, 2254, 2254, 2254, 2254, 2254, 2254, 2254, 2254], [9200, 9200, 9154, 9200, 9200, 9154, 9200, 9200, 9200, 9200, 9154, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9154, 9154, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200], [5934, 5934, 5888, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5888, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5888, 5934, 5934, 5888, 5934, 5934, 5934, 5934, 5888], [6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6900, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6900, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946], [5980, 5980, 5934, 5980, 5980, 5980, 5980, 5980, 5980, 5934, 5980, 5980, 5980, 5980, 5980, 5980, 5980, 5980, 5934, 5934, 5980, 5980, 5980, 5980, 5980, 5980, 5980, 5934, 5980, 5980, 5980, 5980], [4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4830, 4876, 4876], [5612, 5612, 5612, 5566, 5612, 5612, 5612, 5612, 5566, 5612, 5612, 5566, 5612, 5612, 5612, 5612, 5612, 5612, 5566, 5566, 5612, 5612, 5612, 5612, 5612, 5612, 5612, 5612, 5612, 5566], [4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002], [4370, 4370, 4370, 4370, 4324, 4370, 4324, 4370, 4370, 4324, 4370, 4370, 4370, 4370, 4370, 4370, 4370], [4462, 4462, 4462, 4462, 4416, 4462, 4462, 4462, 4462, 4462, 4416, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4416, 4462, 4416, 4462, 4462, 4462, 4416, 4462, 4462, 4462, 4462]]
beh2_after_folding = [[4002, 3956, 3956, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 3956, 4002, 4002, 4002, 4002, 3956, 4002, 4002, 3956, 4002, 4002, 4002,
4002, 4002, 4002], [2254, 2254, 2254, 2254, 2254, 2254, 2254, 2254, 2254], [9200, 9200, 9154, 9200, 9200, 9154, 9200, 9200, 9200, 9200, 9154, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9154, 9154, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200, 9200], [5934, 5934, 5888, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5888, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5934, 5888, 5934, 5934, 5888, 5934, 5934, 5934, 5934, 5888], [6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6900, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6900, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946, 6946], [5980, 5980, 5934, 5980, 5980, 5980, 5980, 5980, 5980, 5934, 5980, 5980, 5980, 5980, 5980, 5980, 5980, 5980, 5934, 5934, 5980, 5980, 5980, 5980, 5980, 5980, 5980, 5934, 5980, 5980, 5980, 5980], [4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876,
4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4876, 4830, 4876, 4876], [5612, 5612, 5612, 5566, 5612, 5612, 5612, 5612, 5566, 5612, 5612, 5566, 5612, 5612, 5612, 5612, 5612, 5612, 5566, 5566, 5612, 5612, 5612, 5612, 5612, 5612, 5612, 5612, 5612, 5566], [4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002], [4370, 4370, 4370, 4370, 4324, 4370, 4324, 4370, 4370, 4324, 4370, 4370, 4370, 4370, 4370, 4370, 4370], [4462, 4462, 4462, 4462, 4416, 4462, 4462, 4462, 4462, 4462, 4416, 4462, 4462, 4462, 4462, 4462, 4462, 4462, 4416, 4462, 4416, 4462, 4462, 4462, 4416, 4462, 4462, 4462, 4462]]

equal = np.equal(np.array(h2_before_folding), np.array(h2_after_folding))
print("beh2 equal???", equal)
raise Exception("end here")


# ############ end bond dimensions ####################

n2_before_folding = [[1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791], [919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919], [943, 943, 943, 943, 943, 943, 943, 943, 943, 943, 943, 943], [919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919, 919], [931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931, 931], [1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255], [1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371], [1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435], [1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391, 1391], [1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747]]

n2_after_folding = [[2665, 2674, 2631, 2658, 2658, 2584, 2663, 2257, 2584, 2309, 2521, 2673, 1791, 2257, 2257, 1791, 2247, 1791, 2667, 2247, 2257, 2247, 2257, 2257, 2247, 1791, 2495, 2257, 2247], [1069, 919, 1237, 919, 919, 919, 1155, 919, 1367, 1325, 1069, 1155, 919, 1155, 1365, 1155, 1155, 1155, 1237, 1325, 919, 919, 1245, 1311, 1287, 1069], [1351, 1279, 1367, 1411, 1183, 1295, 1319, 1183, 1363, 1363, 1183, 1183], [1369, 1237, 1155, 1155, 1365, 1325, 919, 919, 1287, 1155, 1287, 1155, 1325], [1387, 1167, 1377, 1167, 931, 1297, 1249, 1299, 1377, 1283, 1385, 1389, 1385, 1275, 1337, 931, 1369, 1167, 1337, 1345, 1275, 1299, 1167, 1081, 1345, 1081, 1337, 1167, 1337, 1167, 1337, 1377], [1877, 1687, 1579, 1579, 1687, 1255, 1695, 1255, 1869, 1695, 1847, 1747, 1579, 1579, 1457], [1947, 2484, 2511, 1947, 1703, 1703, 2503, 2484, 1703, 1881, 1703, 2484, 2515, 2359, 1947, 1881], [2119, 1997, 1435, 2146, 1435, 2125, 1789, 1936, 2145, 2147, 1936, 2146, 1435, 2034, 2132, 2158, 1789, 2140, 1435, 1967, 2140, 1997, 2143, 2078, 2097, 1936, 2145, 2134, 2145, 2093, 1789, 1967, 1789, 1435, 1789, 2007, 1789, 2124, 1789, 2007, 1435, 1789, 1789, 1435, 1789, 2123, 1435], [1719, 2055, 2070, 1391, 2050, 1735, 2063, 2037, 2033, 2048, 2060, 1391, 1391, 1735, 1735, 1735, 1735, 2031, 1391, 2037, 1971, 1391, 1391, 1907, 1391, 1391, 1907, 1603, 1603], [2621, 2447, 2607, 2565, 1747, 2609, 2598, 1747, 2612, 2609, 2621, 2598, 2617, 2617, 2467, 1747, 2613, 2553, 2496, 1747, 2419, 2604, 2415, 1747, 2536, 2598, 2598, 2496, 1747, 2415, 2485, 2201, 2201, 2185, 2362, 2598, 2185, 2201]]

raise Exception("last obstacle before plotting")

before_h2 = [62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62]
before_beh2 = [361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361]
before_n2 = [1791, 919, 943, 919, 931, 1255, 1371, 1435, 1391, 1747]

opt_h2 = [90, 82, 91, 96, 84, 90, 91, 62, 62, 95, 91, 90, 78, 78, 84, 98, 78, 89, 78, 90, 84, 82, 88, 81, 90, 95]
opt_beh2 = [539, 481, 529, 541, 447, 481, 481, 515, 513, 531, 481]
opt_n2 = [2247, 919, 1183, 919, 1377, 1695, 1703, 1435, 1391, 2415]

# <<<<<<<<<<<<<<<<<<    END DATA    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# beh2_optimal = [] 
up_h2, low_h2 = find_envelope(h2_after_folding)
up_beh2, low_beh2 = find_envelope(beh2_after_folding)
up_n2, low_n2 = find_envelope(n2_after_folding)

distances = [distances_h2, distances_beh2, distances_n2]
uppers = [up_h2, up_beh2, up_n2] 
lowers = [low_h2, low_beh2, low_n2]
befores = [before_h2, before_beh2, before_n2]
optimals = [opt_h2, opt_beh2, opt_n2]
for i in range(3):
    assert(len(distances[i]) == len(lowers[i]))
    assert(len(uppers[i]) == len(optimals[i]))

# fig, ax = plt.subplots(nrows=1, ncols=3, squeeze=True, figsize=(14,7))
fig, ax = plt.subplots()
# for i in range(3):
for i in range(1):
    # ax[i].plot(distances[i], befores[i], '*-', label='before folding')
    # ax[i].plot(distances[i], optimals[i], 'D-', label='after folding best circuit')
    # ax[i].fill_between(distances[i], lowers[i], uppers[i], alpha=.2, label='range of folded circuits')
    # ax[i].set_xlabel('Bond distance in Angstrom')
    ax.plot(distances[i], befores[i], '*-', label='before folding')
    ax.plot(distances[i], optimals[i], 'D-', label='after folding best circuit')
    # ax.fill_between(distances[i], lowers[i], uppers[i], alpha=.2, label='range of folded circuits')
    ax.set_xlabel('Bond distance in Angstrom')
# ax[0].set_title('H2')
# ax[1].set_title('BeH2')
# ax[2].set_title('N2')
# ax[2].legend()
# ax[0].set_ylabel('Number of Hamiltonian terms')

fig.savefig('testfig_dimsh2.pdf')
